<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[2017.5.17]]></title>
    <url>%2F2017%2F05%2F17%2F2017-5-17%2F</url>
    <content type="text"><![CDATA[摘要：正文： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146#include &lt;cstdio&gt;#include &lt;cstdlib&gt;#include &lt;cstring&gt;#include &lt;string&gt;#include &lt;algorithm&gt;using namespace std;#define REP(i, a, b) for (int i = (a), i##_end_ = (b); i &lt;= i##_end_; ++i)#define ls(x) ch[x][0]#define rs(x) ch[x][1]const int maxn = 2e5+10;int n, a[maxn];int ch[maxn][2], sum[maxn], fa[maxn], par[maxn];bool rev[maxn];void Push_Down(int x);void Push_Up(int x);void Rotate(int x, int k);void Splay(int x);void Access(int x);void Evert(int x);void Link(int x, int y);void Cut(int x, int y);int Query(int x);int main()&#123; #ifndef ONLINE_JUDGE freopen("a.in", "r", stdin); freopen("a.out", "w", stdout); #endif scanf("%d", &amp;n); REP(i, 1, n+1) sum[i] = 1; REP(i, 1, n) &#123; scanf("%d", &amp;a[i]); if (i+a[i] &lt;= n) Link(i+a[i], i); else Link(n+1, i); &#125; int Q; scanf("%d", &amp;Q); while (Q --) &#123; int ty, x, k; scanf("%d %d", &amp;ty, &amp;x); x ++; if (ty == 1) printf("%d\n", Query(x)); else &#123; scanf("%d", &amp;k); if (x+a[x] &lt;= n) Cut(x+a[x], x); else Cut(n+1, x); a[x] = k; if (x+a[x] &lt;= n) Link(x+a[x], x); else Link(n+1, x); &#125; &#125; return 0;&#125;void Push_Down(int x)&#123; if (!x || !rev[x]) return ; rev[x] = 0, swap(ls(x), rs(x)); if (ls(x)) rev[ls(x)] ^= 1; if (rs(x)) rev[rs(x)] ^= 1;&#125;void Push_Up(int x)&#123; if (!x) return ; sum[x] = 1; if (ls(x)) sum[x] += sum[ls(x)]; if (rs(x)) sum[x] += sum[rs(x)];&#125;void Rotate(int x, int k)&#123; int y = fa[x], z = fa[y]; ch[y][k] = ch[x][!k], fa[ch[x][!k]] = y; if (z) ch[z][rs(z) == y] = x; fa[x] = z; ch[x][!k] = y, fa[y] = x; par[x] = par[y], par[y] = 0; Push_Up(y), Push_Up(x);&#125;int sta[maxn];void Splay(int x)&#123; int s_cnt = 0; sta[++s_cnt] = x; while (fa[sta[s_cnt]]) sta[++s_cnt] = fa[sta[s_cnt-1]]; while (s_cnt) Push_Down(sta[s_cnt--]); while (fa[x]) &#123; int y = fa[x], z = fa[y]; if (z == 0) &#123; Rotate(x, rs(y) == x); break ; &#125; int k = rs(z) == y; if (ch[y][k] == x) Rotate(y, k), Rotate(x, k); else Rotate(x, !k), Rotate(x, k); &#125;&#125;void Access(int x)&#123; int y = 0; while (x) &#123; Splay(x); if (rs(x)) fa[rs(x)] = 0, par[rs(x)] = x; rs(x) = y; if (y) fa[y] = x, par[y] = 0; Push_Up(x), y = x, x = par[x]; &#125;&#125;void Evert(int x)&#123; Access(x), Splay(x), rev[x] ^= 1;&#125;void Link(int x, int y)&#123; Evert(y), Splay(y), par[y] = x;&#125;void Cut(int x, int y)&#123; Evert(x), Access(y), Splay(y); if (ls(y)) fa[ls(y)] = 0, ls(y) = 0; Push_Up(y);&#125;int Query(int x)&#123; Evert(n+1), Access(x), Splay(x); return sum[ls(x)];&#125;]]></content>
      <categories>
        <category>OI生涯</category>
      </categories>
      <tags>
        <tag>Dairy</tag>
      </tags>
  </entry>
</search>